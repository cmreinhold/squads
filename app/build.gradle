apply plugin: 'com.android.application'
apply plugin: 'kotlin-allopen'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

allOpen {
    annotation 'ch.reinhold.squads.core.domain.OpenForTesting'
}

android {
    compileSdkVersion appCompileSdkVersion
    buildToolsVersion buildToolsVersion

    dataBinding {
        enabled = true
    }

    defaultConfig {
        applicationId "com.reinhold.squads"
        minSdkVersion appMinSdkVersion
        targetSdkVersion appTargetSdkVersion
        versionCode appVersionCode
        versionName appVersionName
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "PUBLIC_KEY", "\"${marvelPublicKey}\"")
        buildConfigField("String", "PRIVATE_KEY", "\"${marvelPrivateKey}\"")
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    // Material design
    implementation "com.google.android.material:material:$materialVersion"

    // AndroidX
    implementation "androidx.arch.core:core-common:$archVersion"
    implementation "androidx.arch.core:core-runtime:$archVersion"

    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.core:core-ktx:$coreVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.paging:paging-runtime:$pagingVersion"
    implementation "androidx.security:security-crypto:1.0.0-rc02"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"

    // Koin
    implementation "org.koin:koin-core:$koinVersion"
    implementation "org.koin:koin-android:$koinVersion"
    implementation "org.koin:koin-androidx-scope:$koinVersion"

    // Room
    kapt "android.arch.persistence.room:compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    implementation "androidx.room:room-runtime:$roomVersion"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    // Gson
    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation 'com.squareup.okhttp3:logging-interceptor:4.0.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitGsonVersion"

    // Picasso
    implementation("com.squareup.picasso:picasso:$picassoVersion") {
        exclude group: 'com.android.support'
    }

    // Testing
    testImplementation "junit:junit:$jUnitVersion"
    testImplementation "androidx.arch.core:core-testing:$archVersion"
    testImplementation "androidx.paging:paging-common:$pagingVersion"
    testImplementation "androidx.room:room-testing:$roomVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"

    testImplementation "org.assertj:assertj-core:$assertJVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"

    // Android Testing
    androidTestImplementation "androidx.arch.core:core-testing:$archVersion"
    androidTestImplementation "androidx.test.ext:junit:$testExtVersion"
    androidTestImplementation "androidx.test:rules:$rulesVersion"
    androidTestImplementation "androidx.test:runner:$runnerVersion"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:$uiAutomatorVersion"

    // Espresso testing libs
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"

    // Architecture Components testing libs
    androidTestImplementation "androidx.arch.core:core-testing:$lifecycleVersion"

    // Coroutines testing libs
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

}
